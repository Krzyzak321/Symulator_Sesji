@startuml
actor Użytkownik

Użytkownik -> Reader : wprowadza dane (przedmioty, dni, tryb)
Reader -> Student : tworzy Student(name, subjects, mode, days)
Student -> Plan : generuje Plan(days, subjects, mode)
Student -> Visualizer : setVisualizer(visualizer)

loop dla każdego dnia (day=1..days)
    loop dla każdego przedmiotu w planie tego dnia
        Student -> Subject : study(hours)
        Subject -> Subject : zwiększ studiedTime
        Student -> StudyEvent : dodaje StudyEvent(subject, hours, day, motivation)
        Student -> Visualizer : updateGraph(subject, hours, day)
    end
end

Student -> ExamResult : takeExams(subjects)
ExamResult -> Subject : getProgress()
ExamResult -> Student : zwraca wynik egzaminu
Student -> Visualizer : updateResults(wynik)
@enduml